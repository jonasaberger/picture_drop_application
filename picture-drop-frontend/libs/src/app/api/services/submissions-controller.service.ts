/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Submission } from '../models/submission';
import { submissionsControllerFindAll } from '../fn/submissions-controller/submissions-controller-find-all';
import { SubmissionsControllerFindAll$Params } from '../fn/submissions-controller/submissions-controller-find-all';
import { submissionsControllerFindOne } from '../fn/submissions-controller/submissions-controller-find-one';
import { SubmissionsControllerFindOne$Params } from '../fn/submissions-controller/submissions-controller-find-one';
import { submissionsControllerRemove } from '../fn/submissions-controller/submissions-controller-remove';
import { SubmissionsControllerRemove$Params } from '../fn/submissions-controller/submissions-controller-remove';

@Injectable({ providedIn: 'root' })
export class SubmissionsControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `submissionsControllerFindAll()` */
  static readonly SubmissionsControllerFindAllPath = '/api/submissions';

  /**
   * Get all submissions.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `submissionsControllerFindAll()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerFindAll$Response(params?: SubmissionsControllerFindAll$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Submission>>> {
    return submissionsControllerFindAll(this.http, this.rootUrl, params, context);
  }

  /**
   * Get all submissions.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `submissionsControllerFindAll$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerFindAll(params?: SubmissionsControllerFindAll$Params, context?: HttpContext): Observable<Array<Submission>> {
    return this.submissionsControllerFindAll$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<Submission>>): Array<Submission> => r.body)
    );
  }

  /** Path part for operation `submissionsControllerFindOne()` */
  static readonly SubmissionsControllerFindOnePath = '/api/submissions/{id}';

  /**
   * Get a submission by ID.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `submissionsControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerFindOne$Response(params: SubmissionsControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<Submission>> {
    return submissionsControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * Get a submission by ID.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `submissionsControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerFindOne(params: SubmissionsControllerFindOne$Params, context?: HttpContext): Observable<Submission> {
    return this.submissionsControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<Submission>): Submission => r.body)
    );
  }

  /** Path part for operation `submissionsControllerRemove()` */
  static readonly SubmissionsControllerRemovePath = '/api/submissions/{id}';

  /**
   * Delete a submission by ID.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `submissionsControllerRemove()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerRemove$Response(params: SubmissionsControllerRemove$Params, context?: HttpContext): Observable<StrictHttpResponse<Submission>> {
    return submissionsControllerRemove(this.http, this.rootUrl, params, context);
  }

  /**
   * Delete a submission by ID.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `submissionsControllerRemove$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  submissionsControllerRemove(params: SubmissionsControllerRemove$Params, context?: HttpContext): Observable<Submission> {
    return this.submissionsControllerRemove$Response(params, context).pipe(
      map((r: StrictHttpResponse<Submission>): Submission => r.body)
    );
  }

}
